name: cargo pgrx test pgrxX

on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'nogha')"

    strategy:
      fail-fast: false
      matrix:
        version: [11, 12, 13, 14, 15]
        os: ["ubuntu-latest"]
        es_version:
        - { image: 'elasticsearch:7.17.0', endpoint: 'http://localhost:19200/' }
        - { image: 'docker.elastic.co/elasticsearch/elasticsearch:8.11.2', endpoint: 'https://elastic:admin@localhost:19200/' }
        - { image: 'opensearchproject/opensearch:1.1.0', endpoint: 'https://admin:admin@localhost:19200/' }
        - { image: 'opensearchproject/opensearch:1.3.11', endpoint: 'https://admin:admin@localhost:19200/' }
        - { image: 'opensearchproject/opensearch:2.11.1', endpoint: 'https://admin:admin@localhost:19200/' }

    services:
      elasticsearch:
        image: ${{ matrix.es_version.image }}
        ports:
          - '19200:9200'
        options: >-
          --env discovery.type=single-node
          --env ELASTIC_PASSWORD=admin

    steps:
    - uses: actions/checkout@v4

    - name: cargo version
      run: cargo --version

    # Remove old Postgres
    - name: remove old Postgres
      run: sudo apt-get remove -y postgres*

      # Update apt
    - name: update apt
      run: |
        sudo apt-get update -y -qq --fix-missing
        sudo apt-get install -y wget gnupg
        sudo bash -c 'echo deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main >> /etc/apt/sources.list.d/pgdg.list'
        sudo wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt update

      # Install Postgres
    - name: install postgres
      run: sudo apt-get install -y clang llvm gcc make build-essential libz-dev zlib1g-dev strace libssl-dev pkg-config postgresql-${{ matrix.version }} postgresql-server-dev-${{ matrix.version }}

    # update cargo indexes so we're sure we get the latest things from 'git' repo dependencies
    - name: cargo update
      run: cargo update

      # install cargo-pgrx
    - name: install cargo-pgrx
      run: cargo install cargo-pgrx --version 0.9.8 --locked

    # initialize pgrx
    - name: cargo pgrx init
      run: cargo pgrx init --pg${{ matrix.version }}=`which pg_config`

    - name: cat config.toml
      run: cat ~/.pgrx/config.toml

    - name: hack permissions
      run: sudo chmod a+rwx `pg_config --pkglibdir` `pg_config --sharedir`/extension /var/run/postgresql/

    # test our code
    - name: cargo test --all
      run: RUST_BACKTRACE=1 ES_ENDPOINT="${{ matrix.es_version.endpoint }}" cargo test --all --no-default-features --features "pg${{ matrix.version }} rustls pg_test" -- --nocapture
